{"ast":null,"code":"var _jsxFileName = \"C:\\\\JS\\\\ref-app-frontend\\\\ref-app\\\\src\\\\component\\\\ItemComponent.jsx\";\nimport React, { Component } from 'react';\nimport ItemDataService from '../service/ItemDataService';\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\n\nclass ItemComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      description: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    ItemDataService.retrieveItem(this.state.id).then(response => this.setState({\n      name: response.data.name,\n      description: response.data.description\n    }));\n  }\n\n  onSubmit(values) {\n    let item = {\n      name: values.name,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n    ItemDataService.updateItem(this.state.id, item).then(() => this.props.history.push('/items'));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.description = 'Enter a name';\n    }\n\n    if (!values.description) {\n      errors.description = 'Enter a description';\n    } else if (values.description.length < 5) {\n      errors.description = 'Enter at least 5 characters in the description';\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      id,\n      name,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        id,\n        name,\n        description\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default ItemComponent;","map":{"version":3,"sources":["C:/JS/ref-app-frontend/ref-app/src/component/ItemComponent.jsx"],"names":["React","Component","ItemDataService","ErrorMessage","Formik","Form","Field","ItemComponent","constructor","props","state","id","match","params","name","description","onSubmit","bind","validate","componentDidMount","retrieveItem","then","response","setState","data","values","item","targetDate","updateItem","history","push","errors","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ItemDataService from '../service/ItemDataService';\r\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\r\n\r\nclass ItemComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: ''\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        ItemDataService.retrieveItem(this.state.id)\r\n            .then(response => this.setState({\r\n                name: response.data.name,\r\n                description: response.data.description\r\n            }));\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let item = {\r\n            name: values.name,\r\n            description: values.description,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n        ItemDataService.updateItem(this.state.id, item)\r\n            .then(() => this.props.history.push('/items'))\r\n    }\r\n\r\n    validate(values){\r\n        let errors= {};\r\n\r\n        if(!values.name){\r\n            errors.description = 'Enter a name'\r\n        }\r\n        if(!values.description){\r\n            errors.description = 'Enter a description'\r\n        } else if(values.description.length < 5){\r\n            errors.description = 'Enter at least 5 characters in the description'\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        let { id, name, description} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h3>Item</h3>\r\n                <div className=\"container\">\r\n                    <Formik \r\n                        initialValues={{ id, name, description }}\r\n                        onSubmit= {this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\"               component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"name\"                   component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Id</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ItemComponent"]},"metadata":{},"sourceType":"module"}